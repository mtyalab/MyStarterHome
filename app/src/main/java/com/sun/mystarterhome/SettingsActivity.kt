package com.sun.mystarterhomeimport android.annotation.SuppressLintimport android.os.Bundleimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.compose.foundation.Imageimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.material.Dividerimport androidx.compose.material.FloatingActionButtonimport androidx.compose.material.Iconimport androidx.compose.material.IconButtonimport androidx.compose.material.MaterialThemeimport androidx.compose.material.Scaffoldimport androidx.compose.material.Surfaceimport androidx.compose.material.Textimport androidx.compose.material.TopAppBarimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.AccountBoximport androidx.compose.material.icons.filled.AccountCircleimport androidx.compose.material.icons.filled.Addimport androidx.compose.material.icons.filled.Menuimport androidx.compose.material.icons.filled.Personimport androidx.compose.material.icons.filled.Placeimport androidx.compose.material.icons.filled.Refreshimport androidx.compose.material.icons.filled.Settingsimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.res.painterResourceimport androidx.compose.ui.text.style.TextAlignimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport androidx.navigation.compose.rememberNavControllerimport com.sun.mystarterhome.ui.theme.MyStarterHomeThemeval primaryColor = Color(0xffffe400)class SettingsActivity : ComponentActivity() {    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContent {            MyStarterHomeTheme {                // A surface container using the 'background' color from the theme                Surface {                    SettingsBody()                }            }        }    }}@SuppressLint("UnusedMaterialScaffoldPaddingParameter")@Composablefun SettingsBody() {    val navController = rememberNavController()    Scaffold(        backgroundColor = Color(0xffeeeeee),        topBar = { SettingsTopBar()  },        content = {            Column(                modifier = Modifier                    .padding(top = 0.dp),            ) {                Text(                    text = "User Settings",                    fontSize = 20.sp,                    modifier = Modifier                        .padding(top = 10.dp, start = 15.dp, end = 15.dp)                )                Row (                    modifier = Modifier                        .fillMaxWidth()                        .padding(top = 10.dp,)                        .background(Color.White),                ) {                    Icon(imageVector = Icons.Default.AccountCircle,                        contentDescription = "account icon",                        tint = primaryColor,                        modifier = Modifier                            .padding(top = 35.dp, start = 20.dp),)                    Column(                        modifier = Modifier                            .fillMaxWidth()                            .weight(1f)                    ) {                        Text(                            text = "Moses",                            modifier = Modifier                                .padding(top = 20.dp, start = 20.dp, end = 40.dp, bottom = 5.dp),                            textAlign = TextAlign.Center,                            color = Color(0xff000000)                        )                        Text(                            text = "kmntanda@gmail.com",                            modifier = Modifier                                .padding(start = 20.dp, end = 40.dp, bottom = 20.dp),                            textAlign = TextAlign.Center,                            color = Color(0xffaeaeae)                        )                    }                }                Text(                    text = "Home Settings",                    fontSize = 20.sp,                    modifier = Modifier                        .padding(top = 10.dp, start = 15.dp, end = 15.dp)                )                Row (                    modifier = Modifier                        .fillMaxWidth()                        .padding(top = 10.dp,)                        .background(Color.White),                ) {                    Icon(imageVector = Icons.Default.Person,                        contentDescription = "account icon",                        tint = primaryColor,                        modifier = Modifier                            .padding(top = 20.dp, start = 20.dp),)                    Column(                        modifier = Modifier                            .fillMaxWidth()                            .weight(1f)                    ) {                        Text(                            text = "Accounts & Hubs",                            modifier = Modifier                                .padding(top = 20.dp, start = 20.dp, end = 40.dp, bottom = 20.dp),                            textAlign = TextAlign.Center,                            color = Color(0xff000000)                        )                    }                }                Divider()                Row (                    modifier = Modifier                        .fillMaxWidth()                        .padding(top = 0.dp,)                        .background(Color.White),                ) {                    Icon(imageVector = Icons.Default.AccountBox,                        contentDescription = "clients icon",                        tint = primaryColor,                        modifier = Modifier                            .padding(top = 20.dp, start = 20.dp),)                    Column(                        modifier = Modifier                            .fillMaxWidth()                            .weight(1f)                    ) {                        Text(                            text = "Clients",                            modifier = Modifier                                .padding(top = 20.dp, start = 20.dp, end = 40.dp, bottom = 20.dp),                            textAlign = TextAlign.Center,                            color = Color(0xff000000)                        )                    }                }Divider()                Row (                    modifier = Modifier                        .fillMaxWidth()                        .padding(top = 0.dp,)                        .background(Color.White),                ) {                    Icon(imageVector = Icons.Default.Place,                        contentDescription = "location icon",                        tint = primaryColor,                        modifier = Modifier                            .padding(top = 20.dp, start = 20.dp),)                    Column(                        modifier = Modifier                            .fillMaxWidth()                            .weight(1f)                    ) {                        Text(                            text = "Locations",                            modifier = Modifier                                .padding(top = 20.dp, start = 20.dp, end = 40.dp, bottom = 20.dp),                            textAlign = TextAlign.Center,                            color = Color(0xff000000)                        )                    }                }                Text(                    text = "Voice",                    fontSize = 20.sp,                    modifier = Modifier                        .padding(top = 10.dp, start = 15.dp, end = 15.dp)                )                Row (                    modifier = Modifier                        .fillMaxWidth()                        .padding(top = 10.dp,)                        .background(Color.White),                ) {                    Icon(imageVector = Icons.Default.Refresh,                        contentDescription = "voice icon",                        tint = primaryColor,                        modifier = Modifier                            .padding(top = 20.dp, start = 20.dp),)                    Column(                        modifier = Modifier                            .fillMaxWidth()                            .weight(1f)                    ) {                        Text(                            text = "Voice Assistant",                            modifier = Modifier                                .padding(top = 20.dp, start = 20.dp, end = 40.dp, bottom = 20.dp),                            textAlign = TextAlign.Center,                            color = Color(0xff000000)                        )                    }                }                Text(                    text = "App Permissions",                    fontSize = 20.sp,                    modifier = Modifier                        .padding(top = 10.dp, start = 15.dp, end = 15.dp)                )                Row (                    modifier = Modifier                        .fillMaxWidth()                        .padding(top = 10.dp,)                        .background(Color.White),                ) {                    Icon(imageVector = Icons.Default.Settings,                        contentDescription = "permission icon",                        tint = Color(0xff000000),                        modifier = Modifier                            .padding(top = 20.dp, start = 20.dp),)                    Column(                        modifier = Modifier                            .fillMaxWidth()                            .weight(1f)                    ) {                        Text(                            text = "Notifications & Permissions",                            modifier = Modifier                                .padding(top = 20.dp, start = 20.dp, end = 40.dp, bottom = 20.dp),                            textAlign = TextAlign.Center,                            color = Color(0xff000000)                        )                    }                }            }        },        bottomBar = { BottomBar(navController) }    )}@Composablefun SettingsTopBar(){    TopAppBar(        title = {            Text(                text = "My Starter Home",                style = MaterialTheme.typography.h6,                color = Color.White,                modifier = Modifier.fillMaxWidth(),                textAlign = TextAlign.Center            )        },        modifier = Modifier.fillMaxWidth(),        backgroundColor = Color(0xffffe400),    )}@Preview@Composablefun PreviewSettingsTopBar(){    MaterialTheme{        Surface {            SettingsTopBar()        }    }}